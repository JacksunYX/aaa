//
//  pch.pch
//  爱爱
//
//  Created by 爱爱网 on 16/1/27.
//  Copyright © 2016年 黑色o.o表白. All rights reserved.
//

#ifndef pch_pch
#define pch_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

#endif /* pch_pch */


#pragma mark ----- 统一引入头文件

#import "AppDelegate.h"
#import "JTNavigationController.h"  //导航栏库
#import "MBProgressHUD.h"           //指示器库
#import "DKNightVersion.h"          //夜间模式库
#import "UITableView+SDAutoTableViewCellHeight.h"   //用于UITableView的自动布局
#import "UIView+SDAutoLayout.h"                     //用于一般视图的自动布局
#import "SSKeychain.h"  //获取唯一标识符并且保存到钥匙串的库
#import "DGActivityIndicatorView.h" //加载圈库(很多选择)
#import "FontManager.h" //字体下载库


#import "XZMStatusBarHUD.h"         //状态栏文字提示库
#import "CWStatusBarNotification.h" //状态栏文字提示库2

/// 判断当前系统版本是否为iOS7
#define ISiOS7 ([[UIDevice currentDevice].systemVersion doubleValue] >= 7.0)

///////////////////////------------------------
#pragma mark --- 统一接口

//#define MainUrl         @"http://192.168.0.121:8080"                    //本地的总域名

//#define MainUrl         @"http://119.29.80.151"                         //云上的总域名

#define MainUrl         @"http://119.29.240.167"                        //测试用域名

#define DebugUrl        @"http://www.slamb.cn"  //处理web显示格式的域名

#define MyAppID         @"1105323010"

//新闻相关接口

#define NewsIndexUrl    @"/mobile/content/getContentIndexs.jspx"        //请求新闻索引

#define newsList        @"/mobile/content/contentsPage.jspx"            //新闻列表

#define newsDetail      @"/mobile/content/getDetail.jspx"               //详细新闻

#define commentCheckUrl @"/mobile/comment/commentList.jspx"             //查看评论接口

#define issuecomentUrl  @"/mobile/comment/mobileComment.jspx"           //发表评论

#define commandUrl      @"/mobile/command/userCommand.jspx"             //集合点赞、收藏等功能一体

#define NewsCommandUrl  @"/mobile/content/getCommandNum.jspx"           //获取新闻的相关参数(是否被收藏、评论数等)



//登录、注册

#define thirdLogin      @"/mobile/user/thirdLogin.jspx"                 //第三方登录接口

#define loginUrl        @"/mobile/user/login.jspx"                      //登录接口

#define RegisterUrl     @"/mobile/user/register.jspx"                   //注册接口

#define LogoutUrl       @"/mobile/user/logout.jspx"                     //注销接口

#define VerifyCodeUrl   @"/mobile/common/verifyCode.jspx"               //图片验证码

#define PhoneTestCode   @"/mobile/common/sendMessage.jspx"              //手机验证码



//侧边栏功能接口

#define CollectUrl      @"/mobile/command/getCollections.jspx"          //查看收藏列表

#define DeleteCollects  @"/mobile/command/batchDeleteCollections.jspx"  //批量删除收藏新闻

#define UserCommentUrl  @"/mobile/comment/myComments.jspx"              //查看我的评论

#define GetSingleCommentUrl     @"/mobile/comment/getComment.jspx"      //获取单条评论的相关信息



//用户信息修改界面

#define UploadImgUrl    @"/mobile/common/uploadPicture.jspx"            //上传图片

#define UpdateUserInfoUrl @"/mobile/userinfo/modifyUserInfo.jspx"       //修改用户信息

#define GetUserInfo     @"/mobile/userinfo/getUserInfo.jspx"            //获取用户信息

#define BandPhoneUrl    @"/mobile/userinfo/bindContact.jspx"            //绑定手机号

#define UpdataPasswordUrl   @"/mobile/userinfo/modifyPassword.jspx"     //修改密码


//酒店预订相关接口
#define GetCitiesList   @"/mobile/aiaizone/getAiaiZones.jspx"           //获取城市列表(get)

#define GetRoomThemeList @"/mobile/roomtheme/getRoomThemeList.jspx"      //获取主题列表(get)

#define GetRoomList     @"/mobile/room/getRoomList.jspx"                //获取对应主题的房间列表(get)

#define GetRoomDetail   @"/mobile/room/getRoomDetail.jspx"              //获取房间详情(get)

#define GetRoomDeviceList @"/mobile/roomdevice/getRoomDeviceList.jspx"  //获取房间设施列表(get)

#define GetRoomPriceList @"/mobile/dailyprice/getRoomDailyPriceList.jspx"   //获取对应房间的价格列表

#define MakeOrderRoomRelation   @"/mobile/orderroom/makeOrderRoomRelation.jspx" //预定房间(post)

#define CancelOrder     @"/mobile/orderroom/cancelOrder.jspx"           //取消订单(post)

#define GetMyOrderList  @"/mobile/orderroom/getMyOrderList.jspx"        //获取我的订单列表(get)

#define GetOrderStatus  @"/mobile/orderroom/getOrderDetail.jspx"       //获取单个订单详情(get)

///////////////////////////////---------------------
#pragma  mark ----- 统一宏

//获取当前app正在登录的userId
#define CurrentUserId [[NSUserDefaults standardUserDefaults] objectForKey:@"userId"]

//离线阅读标记
#define offLineReadState @"offLineReadState"

//是否首次进入图片页面
#define FirstTimeToReadImageNew  @"FirstTimeToReadImageNewOrNot"


#define Width   [UIScreen mainScreen].bounds.size.width     //屏幕宽
#define Height  [UIScreen mainScreen].bounds.size.height    //屏幕高

#define NavigationBarHeight (64)   //导航栏方位



#pragma mark ----- 颜色相关宏

//RGB色值设置
#define RGBA(r,g,b,a) [UIColor colorWithRed:r/255.0f green:g/255.0f blue:b/255.0f alpha:a]

#define MainThemeColor      RGBA(230, 23, 115, 1.0)      //APP主题色

#define TitleTextColorNight                  RGBA(255, 255, 255, 1.0)        //夜间模式标题的字体颜色
#define ContentTextColorNight                RGBA(221, 221, 221, 1.0)        //夜间模式内容的字体颜色
#define UnimportantContentTextColorNight     RGBA(160, 160, 160, 1.0)        //夜间模式其他内容的字体颜色

#define TitleTextColorNormal                 RGBA(50, 50, 50, 1.0)          //普通模式标题的字体颜色
#define ContentTextColorNormal               RGBA(100, 100, 100, 1.0)       //普通模式内容的字体颜色
#define UnimportantContentTextColorNormal    RGBA(144, 144, 144, 1.0)       //普通模式其他内容的字体颜色


#define normalbackgroundColor RGBA(230, 23, 115, 1)


#define FirstNightBackgroundColor       RGBA(16, 16, 16, 1)   //夜间模式最底层视图的颜色
#define SecondaryNightBackgroundColor  RGBA(50, 50, 50, 1)     //夜间模式第二层视图的颜色

#define SeperatorLineColor  RGBA(230, 230, 230, 1)  //分割线的统一背景色

#pragma mark ----- 刷新尾的刷新文字显示
#define TableViewMJFooterUpLoadText         @"加载更多" //还未上拉加载时的文字显示
#define TableViewMJFooterRefreshingText     @"加载中..."   //加载中的文字显示
#define TableViewMJFooterNoMoreDataText     @"没有啦~"     //加载完所有数据的文字显示


#define TextFieldBorderWidth    1.5   //文本输入框的边框宽度



/**
 *  the saving objects      存储对象
 *
 *  @param __VALUE__ V
 *  @param __KEY__   K
 *
 *  @return
 */
#define UserDefaultSetObjectForKey(__VALUE__,__KEY__) \
{\
[[NSUserDefaults standardUserDefaults] setObject:__VALUE__ forKey:__KEY__];\
[[NSUserDefaults standardUserDefaults] synchronize];\
}

/**
 *  get the saved objects       获得存储的对象
 */
#define UserDefaultObjectForKey(__KEY__)  [[NSUserDefaults standardUserDefaults] objectForKey:__KEY__]

/**
 *  delete objects      删除对象
 */
#define UserDefaultRemoveObjectForKey(__KEY__) \
{\
[[NSUserDefaults standardUserDefaults] removeObjectForKey:__KEY__];\
[[NSUserDefaults standardUserDefaults] synchronize];\
}

//NSUserDefaults 实例化
#define USER_DEFAULT [NSUserDefaults standardUserDefaults]



//GCD
#define GCDWithGlobal(block) dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), block)
//异步主线程
#define GCDWithMain(block) dispatch_async(dispatch_get_main_queue(),block)
//同步主线程
#define GCDWithMainSync(block) dispatch_sync(dispatch_get_main_queue(),block)

//获取设备码
#define GetCurrentToken(token) \
{\
    NSString * currentDeviceUUIDStr = [SSKeychain passwordForService:@" " account:@"uuid"];\
    if (currentDeviceUUIDStr == nil || [currentDeviceUUIDStr isEqualToString:@""])\
    {\
        NSUUID * currentDeviceUUID  = [UIDevice currentDevice].identifierForVendor;\
        currentDeviceUUIDStr = currentDeviceUUID.UUIDString;\
        currentDeviceUUIDStr = [currentDeviceUUIDStr stringByReplacingOccurrencesOfString:@"-" withString:@""];\
        currentDeviceUUIDStr = [currentDeviceUUIDStr lowercaseString];\
        [SSKeychain setPassword: currentDeviceUUIDStr forService:@" " account:@"uuid"];\
    }\
    token = currentDeviceUUIDStr;\
}

//取得当前时间的字符串
#define getTheCurrentDate(currentDate) \
{\
    NSDateFormatter *nsdf2=[[NSDateFormatter alloc] init];\
    [nsdf2 setDateStyle:NSDateFormatterShortStyle];\
    [nsdf2 setDateFormat:@"YYYY-MM-dd HH:mm:ss"];\
    currentDate = [nsdf2 stringFromDate:[NSDate date]];\
}

//设置导航栏标题(字体大小，颜色)
#define SetNavigationBarTitle(textfont,textcolor) \
{\
    [self.navigationController.navigationBar setTitleTextAttributes:@{NSFontAttributeName:[UIFont systemFontOfSize:textfont],NSForegroundColorAttributeName:textcolor}];\
}

//设置导航栏标题(字体，颜色)
#define SetNavigationBarTitle2(fontName,textcolor) \
{\
    [self.navigationController.navigationBar setTitleTextAttributes:@{NSFontAttributeName:fontName,NSForegroundColorAttributeName:textcolor}];\
}

//强制注销通用方法(本地注销)
#define  ForceLoginout \
{\
    NSDictionary *dict2 =[[NSDictionary alloc] initWithObjectsAndKeys:@"yes",@"loginout", nil];\
    NSNotification *notification =[NSNotification notificationWithName:@"LogoutTongZhi" object:nil userInfo:dict2];\
    [[NSNotificationCenter defaultCenter] postNotification:notification];\
    double delayInSeconds = 1.0;\
    dispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(delayInSeconds * NSEC_PER_SEC));\
    dispatch_after(popTime, dispatch_get_main_queue(), ^(void){\
        [self.navigationController popToRootViewControllerAnimated:YES];\
    });\
}

//快速提示框
#define showHudString(noticeString) \
{\
    MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];\
    hud.mode = MBProgressHUDModeText;\
    hud.labelText = noticeString;\
    hud.margin = 10.f;\
    hud.removeFromSuperViewOnHide = YES;\
    [hud hide:YES afterDelay:1];\
}

//设置导航栏按钮的方位(leftOrRight中0代表左，非0为右)
#define SetUpNavigationBarItemLocation(space,leftOrRight,barItem) \
{\
    if (([[[ UIDevice currentDevice ] systemVersion ] floatValue ]>= 7.0 ? space : 0 ))\
    {\
        UIBarButtonItem *negativeSpacer = [[ UIBarButtonItem alloc ]initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace target:nil action:nil];\
        negativeSpacer. width = - space ; \
        if (leftOrRight ==0) {\
            self.navigationItem.leftBarButtonItems = @[ negativeSpacer, barItem ] ;\
        }else{\
            self.navigationItem.rightBarButtonItems = @[ negativeSpacer, barItem ] ;\
        }\
    }else{  \
        if (leftOrRight ==0) {\
            self.navigationItem.leftBarButtonItem= barItem;\
        }else{\
            self.navigationItem.rightBarButtonItem = barItem ;\
        }\
    }\
}

//自定义导航栏的按钮(不给size则默认宽高都为44)
#define CreatNavigationBtn(width,height,imageName,btn) \
{\
    if (width&&height) {\
        btn = [[UIButton alloc]initWithFrame:CGRectMake(0,0,width,height)];\
    }\
    else{\
        btn = [[UIButton alloc]initWithFrame:CGRectMake(0,0,44,44)];\
    }\
    [btn setBackgroundImage:[[UIImage imageNamed:imageName]imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal] forState:UIControlStateNormal];\
}




///字体相关

//兰亭黑-简 纤黑
#define LantingHJQH @"FZLTXHK--GBK1-0"

//苹方-简 纤细体
#define PingFangSCQ @"PingFangSC-Thin"

//苹方-简 极细体
#define PingFangSCJ @"PingFangSC-Ultralight"

//苹方-简 细体
#define PingFangSCX @"PingFangSC-Light"

//苹方-简 常规体
#define PingFangSCC @"PingFangSC-Regular"



















///






































